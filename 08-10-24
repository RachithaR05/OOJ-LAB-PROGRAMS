1. Demonstrate Concept on TypeÂ  Casting
public class TypeCastingExample2 {
    public static void main(String[] args) {
        double numDouble = 9.78;    // Double
        int numInt = (int) numDouble; // Explicit casting (double to int)

        System.out.println("Explicit Type Casting Result: " + numInt); // Output: 9
    }
}
public class TypeCastingExample{
    public static void main(String[] args) {
        int numInt = 10;           // Integer
        double numDouble = numInt; // Implicit casting (int to double)

        System.out.println("Implicit Type Casting Result: " + numDouble); // Output: 10.0
    }
}


2. Demonstrate Classes(Basic example)
class Dog {
    // Attributes
    String name;
    int age;

    // Constructor
    Dog(String name, int age) {
        this.name = name; // 'this' refers to the current object
        this.age = age;
    }

    // Method to make the dog bark
    void bark() {
        System.out.println(name + " says Woof!");
    }

    // Method to get dog's info
    void info() {
        System.out.println(name + " is " + age + " years old.");
    }
}

public class Main {
    public static void main(String[] args) {
        // Creating an object of the Dog class
        Dog myDog = new Dog("Buddy", 3);

        // Calling methods
        myDog.bark(); // Output: Buddy says Woof!
        myDog.info(); // Output: Buddy is 3 years old.
    }
}

3. Develop a Java program that prints all real solutions to the quadratic equation
ax 2 +bx+c = 0. Read in a, b, c and use the quadratic formula. If the discriminate b 2 -
4ac is negative, display a message stating that there are no real solutions.

import java.util.Scanner;

public class QuadraticEquationSolver {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read coefficients a, b, c
        System.out.print("Enter coefficient a: ");
        double a = scanner.nextDouble();
        System.out.print("Enter coefficient b: ");
        double b = scanner.nextDouble();
        System.out.print("Enter coefficient c: ");
        double c = scanner.nextDouble();

        // Calculate the discriminant
        double discriminant = b * b - 4 * a * c;

        if (discriminant > 0) {
            // Two real and distinct solutions
            double root1 = (-b + Math.sqrt(discriminant)) / (2 * a);
            double root2 = (-b - Math.sqrt(discriminant)) / (2 * a);
            System.out.println("Roots are real and different.");
            System.out.println("Root 1: " + root1);
            System.out.println("Root 2: " + root2);
        } else if (discriminant == 0) {
            // One real solution
            double root = -b / (2 * a);
            System.out.println("Root is real and the same: " + root);
        } else {
            // No real solutions
            System.out.println("There are no real solutions.");
        }

        scanner.close();
    }
}
/*Enter coefficient a: 12
Enter coefficient b: 8
Enter coefficient c: 6
There are no real solutions.*/

4. Develop a Java program to create a class Student with members usn, name, an array
credits and an array marks. Include methods to accept and display details and a
method to calculate SGPA of a student.

import java.util.Scanner;

class Student {
    String usn;
    String name;
    int[] credits;
    int[] marks;

    // Method to accept details
    public void acceptDetails() {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter USN: ");
        usn = scanner.nextLine();
        System.out.print("Enter Name: ");
        name = scanner.nextLine();

        System.out.print("Enter number of subjects: ");
        int numSubjects = scanner.nextInt();
        credits = new int[numSubjects];
        marks = new int[numSubjects];

        for (int i = 0; i < numSubjects; i++) {
            System.out.print("Enter credits for subject " + (i + 1) + ": ");
            credits[i] = scanner.nextInt();
            System.out.print("Enter marks for subject " + (i + 1) + ": ");
            marks[i] = scanner.nextInt();
        }
    }

    // Method to display details
    public void displayDetails() {
        System.out.println("USN: " + usn);
        System.out.println("Name: " + name);
        for (int i = 0; i < credits.length; i++) {
            System.out.println("Subject " + (i + 1) + ": Credits = " + credits[i] + ", Marks = " + marks[i]);
        }
    }

    // Method to calculate SGPA
    public double calculateSGPA() {
        double totalCredits = 0;
        double totalPoints = 0;

        for (int i = 0; i < credits.length; i++) {
            totalCredits += credits[i];
            totalPoints += (marks[i] * credits[i]); // Assuming marks are out of 100
        }

        return totalCredits == 0 ? 0 : totalPoints / totalCredits;
    }
}

public class StudentDemo {
    public static void main(String[] args) {
        Student student = new Student();
        student.acceptDetails();
        student.displayDetails();

        double sgpa = student.calculateSGPA();
        System.out.println("SGPA: " + sgpa);
    }
}
/*Enter USN: 1WA23CS052
Enter Name: RACHITHA
Enter number of subjects: 2
Enter credits for subject 1: 4
Enter marks for subject 1: 95
Enter credits for subject 2: 4
Enter marks for subject 2: 95
USN: 1WA23CS052
Name: RACHITHA
Subject 1: Credits = 4, Marks = 95
Subject 2: Credits = 4, Marks = 95
SGPA: 95.0 */


